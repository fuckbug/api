name: CI/CD Pipeline

on:
  push:
    branches: [ main, dev ]
  pull_request:

env:
  GO_VERSION: "1.24"
  GOLANGCI_VERSION: "v1.64.2"
  WORKING_DIR: "./"
  IMAGE_NAME: "fuckbugio/api"
  IMAGE_VERSION: "latest"

jobs:
  analyze:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: ~${{ env.GO_VERSION }}
          cache: true
          cache-dependency-path: '**/go.sum'

      - name: Install swag
        run: go install github.com/swaggo/swag/cmd/swag@latest

      - name: Generate Swagger docs
        run: swag init -g ./cmd/fuckbug/main.go

      - name: Linters
        uses: golangci/golangci-lint-action@v4
        with:
          version: ${{ env.GOLANGCI_VERSION }}
          working-directory: ${{ env.WORKING_DIR }}
          args: --timeout=5m --verbose

  tests:
    needs: analyze
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: ~${{ env.GO_VERSION }}
          cache: true
          cache-dependency-path: '**/go.sum'

      - name: Install swag
        run: go install github.com/swaggo/swag/cmd/swag@latest

      - name: Generate Swagger docs
        run: swag init -g ./cmd/fuckbug/main.go

      - name: Unit tests
        run: go test -v -count=1 -race -timeout=1m ./...

      - name: Optimization tests
        run: go test -v -count=1 -timeout=1m -tags bench ./...

  build:
    needs: tests
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./build/fuckbug/Dockerfile
          push: ${{ github.ref == 'refs/heads/main' }}
          tags: ${{ env.IMAGE_NAME }}:${{ env.IMAGE_VERSION }}